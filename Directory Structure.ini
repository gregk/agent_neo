Directory Structure

project-root/
├── docker-compose.yml                   # Orchestration of backend/frontend/dbs
├── .env.example                         # Example env file
├── .github/
│   └── workflows/
│       └── ci.yml                       # Simple CI pipeline
├── frontend/
│   ├── Dockerfile                       # Dockerfile for SvelteKit app
│   ├── package.json
│   ├── svelte.config.js
│   ├── src/
│   │   ├── routes/
│   │   │   ├── +layout.svelte          # Basic layout
│   │   │   └── +page.svelte            # Home page with WS integration
│   │   ├── lib/
│   │   │   └── websocket.ts            # WebSocket client wrapper
│   │   ├── app.d.ts                    # TypeScript definitions
│   │   └── app.html                    # HTML template
│   ├── static/
│   │   └── favicon.png
│   └── vite.config.js
└── backend/
    ├── Dockerfile                       # Dockerfile for FastAPI backend
    ├── requirements.txt or pyproject.toml
    ├── src/
    │   ├── main.py                      # FastAPI entry point
    │   ├── api/
    │   │   ├── __init__.py
    │   │   ├── routes/
    │   │   │   ├── __init__.py
    │   │   │   ├── health.py           # Health check endpoint
    │   │   │   ├── chat.py             # Example route for chat-based interactions
    │   │   │   └── agent.py            # Endpoint for triggering agent actions
    │   │   └── websocket.py            # WebSocket endpoint
    │   ├── agents/
    │   │   ├── __init__.py
    │   │   ├── agent_config.py         # LangChain agent configuration
    │   │   └── tools.py                # Tools used by the agent
    │   ├── db/
    │   │   ├── __init__.py
    │   │   ├── postgres.py             # SQLAlchemy setup for Postgres
    │   │   ├── mongodb.py              # MongoDB setup (Motor or PyMongo)
    │   │   ├── vectorstore.py          # Qdrant integration
    │   │   └── models/
    │   │       ├── __init__.py
    │   │       └── user.py             # Example SQLAlchemy model
    │   ├── services/
    │   │   └── llm.py                  # Functions to call LLM (OpenAI API)
    │   ├── core/
    │   │   ├── config.py               # Loads env vars, config
    │   │   ├── logging_config.py
    │   │   └── utils.py
    │   └── tests/
    │       └── test_basic.py
    └── .env                             # Backend environment variables
